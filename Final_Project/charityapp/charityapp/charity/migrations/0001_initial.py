# Generated by Django 4.2.2 on 2023-07-05 20:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CharityUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('DO_NOT_SHOW', 'Do not show')], max_length=11)),
                ('user_type', models.CharField(choices=[('SPONSOR', 'Sponsor'), ('BENEFACTOR', 'Benefactor'), ('HELPER', 'Helper')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CharityCampaigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('motivation', models.TextField()),
                ('type', models.CharField(choices=[('1', 'Environmental Charity'), ('2', 'Childrenâ€™s Charity'), ('3', 'Human Rights Charity'), ('4', 'Disaster Relief Charity'), ('5', 'Scientific Research Charity'), ('6', 'Senior Citizen Charity'), ('7', 'Cultural Charity'), ('8', 'Animal-Based Charity'), ('9', 'Sports-Based Charity'), ('10', 'Education Charity'), ('11', 'Other')], max_length=50)),
                ('website', models.URLField()),
                ('period', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='DonationCampaigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('motivation', models.TextField()),
                ('goal_amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('current_amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SponsorsProfiles',
            fields=[
                ('sponsor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(max_length=50)),
                ('career_field', models.CharField(blank=True, choices=[('1', 'Architecture and Construction'), ('2', 'Accounting, Banking and Finance'), ('3', 'Agriculture, Farming and Food'), ('4', 'Arts, Culture and Entertainment'), ('5', 'Business, management and administration'), ('6', 'Communications'), ('7', 'Computer Technology'), ('8', 'Customer Service and Sales'), ('9', 'Education and Training'), ('10', 'Environment'), ('11', 'Government and Military'), ('12', 'Health and Medical'), ('13', 'Hospitality, Travel and Tourism'), ('14', 'Installation, Maintenance and Repair'), ('15', 'Law, Public Policy, Enforcement and Safety'), ('16', 'Manufacturing and Production'), ('17', 'Media and Broadcast'), ('18', 'STEM (Science, Technology, Engineering and Mathematics)'), ('19', 'Social, Charity and Community Service'), ('20', 'Transport and Distribution'), ('21', 'Other')], max_length=100, null=True)),
                ('donation_history', models.ManyToManyField(to='charity.donationcampaigns')),
            ],
        ),
        migrations.CreateModel(
            name='HelperProfiles',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.IntegerField()),
                ('strengths', models.TextField(blank=True, null=True)),
                ('interests', models.CharField(choices=[('1', 'Environmental causes'), ('2', 'Humanitarian causes'), ('3', 'Causes of disasters and accidents'), ('4', 'Animal causes'), ('5', 'Other')], default='1', max_length=50)),
                ('role', models.CharField(choices=[('1', 'Chairman'), ('1', 'Vice Chairman'), ('1', 'Secretary'), ('1', 'Administrator'), ('1', 'Moderator'), ('1', 'Cashier'), ('1', 'Public Relations (PR)'), ('1', 'Volunteer'), ('1', 'Field volunteer'), ('1', 'Member of the Club')], max_length=50)),
                ('contribution_history', models.ManyToManyField(to='charity.charitycampaigns')),
            ],
        ),
        migrations.CreateModel(
            name='BenefactorsProfiles',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.IntegerField()),
                ('bio', models.TextField(blank=True, null=True)),
                ('charity_history', models.ManyToManyField(to='charity.charitycampaigns')),
                ('donation_history', models.ManyToManyField(to='charity.donationcampaigns')),
            ],
        ),
    ]
