# Generated by Django 4.2.2 on 2023-07-10 21:53

import charityapp.user_profiles.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('charity', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CharityUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('DO_NOT_SHOW', 'Do not show')], default=charityapp.user_profiles.models.Gender['DO_NOT_SHOW'], max_length=30)),
                ('user_type', models.CharField(choices=[('SPONSOR', 'Sponsor'), ('VOLUNTEER', 'Volunteer'), ('MEMBER', 'Member')], max_length=30)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('interests', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerUser',
            fields=[
                ('volunteer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.IntegerField()),
                ('bio', models.TextField(blank=True, null=True)),
                ('charity_history', models.ManyToManyField(to='charity.charitycampaigns')),
                ('donation_history', models.ManyToManyField(to='charity.donationcampaigns')),
            ],
        ),
        migrations.CreateModel(
            name='SponsorUser',
            fields=[
                ('sponsor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(max_length=100)),
                ('contact_name', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('website', models.URLField()),
                ('career_field', models.CharField(blank=True, max_length=100, null=True)),
                ('donation_history', models.ManyToManyField(to='charity.donationcampaigns')),
            ],
        ),
        migrations.CreateModel(
            name='MemberUser',
            fields=[
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.IntegerField()),
                ('strengths', models.TextField(blank=True, null=True)),
                ('interests', models.CharField(choices=[('ENVIRONMENTAL_CAUSES', 'Environmental causes'), ('HUMANITARIAN_CAUSES', 'Humanitarian causes'), ('DISASTERS_AND_ACCIDENTS_CAUSES', 'Causes of disasters and accidents'), ('ANIMAL_CAUSES', 'Animal causes'), ('OTHER', 'Other')], max_length=33)),
                ('role', models.CharField(choices=[('CHAIRMAN', 'Chairman'), ('VICE_CHAIRMAN', 'Vice Chairman'), ('SECRETARY', 'Secretary'), ('ADMINISTRATOR', 'Administrator'), ('MODERATOR', 'Moderator'), ('CASHIER', 'Cashier'), ('PR', 'Public Relations (PR)'), ('VOLUNTEER', 'Volunteer'), ('FIELD_VOLUNTEER', 'Field volunteer'), ('MEMBER', 'Member of the Club')], max_length=21)),
                ('contribution_history', models.ManyToManyField(to='charity.charitycampaigns')),
            ],
        ),
    ]
